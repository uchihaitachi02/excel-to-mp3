import streamlit as st
import pandas as pd
from gtts import gTTS
from pydub import AudioSegment
from pydub.utils import which
import os
from io import BytesIO

# C·∫•u h√¨nh ffmpeg cho pydub
AudioSegment.converter = which("ffmpeg")
AudioSegment.ffprobe = which("ffprobe")

st.title("üìò Chuy·ªÉn Excel th√†nh MP3 h·ªçc t·ª´ v·ª±ng")

# Upload file Excel
uploaded_file = st.file_uploader("üìÇ T·∫£i l√™n file Excel (.xlsx)", type=["xlsx"])

# Ch·ªçn ng√¥n ng·ªØ
lang_option = st.selectbox("üåê Ch·ªçn ng√¥n ng·ªØ ngu·ªìn", ["Anh - Vi·ªát", "Trung - Vi·ªát"])

# Ch·ªçn t·ªëc ƒë·ªô ƒë·ªçc
speed_map = {
    "0.5x (r·∫•t ch·∫≠m)": 0.5,
    "0.75x (ch·∫≠m)": 0.75,
    "1.0x (chu·∫©n)": 1.0,
    "1.25x (nhanh nh·∫π)": 1.25,
    "1.5x (nhanh)": 1.5,
    "2.0x (r·∫•t nhanh)": 2.0
}
speed_label = st.selectbox("‚ö° T·ªëc ƒë·ªô ƒë·ªçc", list(speed_map.keys()), index=1)
speed_option = speed_map[speed_label]

def change_speed(sound, speed=1.0):
    """Thay ƒë·ªïi t·ªëc ƒë·ªô ph√°t √¢m thanh"""
    new_frame_rate = int(sound.frame_rate * speed)
    return sound._spawn(sound.raw_data, overrides={"frame_rate": new_frame_rate}).set_frame_rate(sound.frame_rate)

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    # L·∫•y t√™n file g·ªëc v√† t·∫°o t√™n file mp3
    excel_filename = uploaded_file.name
    mp3_filename = os.path.splitext(excel_filename)[0] + ".mp3"

    if st.button("üöÄ Chuy·ªÉn ƒë·ªïi sang MP3"):
        # T·∫°o folder tmp
        if not os.path.exists("tmp"):
            os.makedirs("tmp")

        audio_segments = []

        for i, row in df.iterrows():
            source_word = str(row['A'])   # c·ªôt A: English ho·∫∑c Chinese
            vietnamese_meaning = str(row['B'])
            vietnamese_example = str(row['C'])
            source_example = str(row['D'])

            # Ng√¥n ng·ªØ ph√°t √¢m
            if lang_option == "Anh - Vi·ªát":
                lang_src = "en"
                example_prefix = "Example: "
            else:
                lang_src = "zh-cn"
                example_prefix = "‰æãÂ≠ê: "  # ti·∫øng Trung cho "V√≠ d·ª•"

            # 1. ƒê·ªçc t·ª´ g·ªëc l·∫ßn 1
            tts1 = gTTS(text=source_word, lang=lang_src)
            path1 = f"tmp/src1_{i}.mp3"
            tts1.save(path1)
            audio_segments.append(AudioSegment.from_mp3(path1))
            audio_segments.append(AudioSegment.silent(duration=500))

            # 2. ƒê·ªçc t·ª´ g·ªëc l·∫ßn 2
            tts2 = gTTS(text=source_word, lang=lang_src)
            path2 = f"tmp/src2_{i}.mp3"
            tts2.save(path2)
            audio_segments.append(AudioSegment.from_mp3(path2))

            # 3. Nghƒ©a ti·∫øng Vi·ªát
            tts_vi = gTTS(text=f"Nghƒ©a l√† {vietnamese_meaning}", lang="vi")
            path_vi = f"tmp/vi_{i}.mp3"
            tts_vi.save(path_vi)
            audio_segments.append(AudioSegment.from_mp3(path_vi))
            audio_segments.append(AudioSegment.silent(duration=500))

            # 4. V√≠ d·ª• ti·∫øng Vi·ªát
            tts_vi_ex = gTTS(text=f"V√≠ d·ª•: {vietnamese_example}", lang="vi")
            path_viex = f"tmp/viex_{i}.mp3"
            tts_vi_ex.save(path_viex)
            audio_segments.append(AudioSegment.from_mp3(path_viex))
            audio_segments.append(AudioSegment.silent(duration=500))

            # 5. V√≠ d·ª• ti·∫øng Anh ho·∫∑c Trung
            tts_src_ex = gTTS(text=example_prefix + source_example, lang=lang_src)
            path_ex = f"tmp/src_ex_{i}.mp3"
            tts_src_ex.save(path_ex)
            audio_segments.append(AudioSegment.from_mp3(path_ex))
            audio_segments.append(AudioSegment.silent(duration=1000))

        # Gh√©p l·∫°i
        final_audio = AudioSegment.empty()
        for seg in audio_segments:
            final_audio += seg

        # Thay ƒë·ªïi t·ªëc ƒë·ªô theo ng∆∞·ªùi d√πng ch·ªçn
        final_audio = change_speed(final_audio, speed_option)

        # Xu·∫•t file mp3 ra b·ªô nh·ªõ
        mp3_buffer = BytesIO()
        final_audio.export(mp3_buffer, format="mp3")
        mp3_buffer.seek(0)

        # Hi·ªÉn th·ªã nghe th·ª≠
        st.success(f"‚úÖ ƒê√£ t·∫°o file MP3 th√†nh c√¥ng v·ªõi t·ªëc ƒë·ªô {speed_label}!")
        st.audio(mp3_buffer, format="audio/mp3")

        # N√∫t t·∫£i file
        st.download_button(
            label="üíæ T·∫£i MP3 v·ªÅ m√°y",
            data=mp3_buffer,
            file_name=mp3_filename,
            mime="audio/mp3"
        )
